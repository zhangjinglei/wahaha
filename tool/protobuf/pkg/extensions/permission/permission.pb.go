// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: permission.proto

package permission

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//httpmethod：get，post
//如果不想提供http接口，可以 method:"no"
type HttpRule_HttpMethod int32

const (
	HttpRule_No   HttpRule_HttpMethod = 0
	HttpRule_Get  HttpRule_HttpMethod = 1
	HttpRule_Post HttpRule_HttpMethod = 2
)

var HttpRule_HttpMethod_name = map[int32]string{
	0: "No",
	1: "Get",
	2: "Post",
}

var HttpRule_HttpMethod_value = map[string]int32{
	"No":   0,
	"Get":  1,
	"Post": 2,
}

func (x HttpRule_HttpMethod) Enum() *HttpRule_HttpMethod {
	p := new(HttpRule_HttpMethod)
	*p = x
	return p
}

func (x HttpRule_HttpMethod) String() string {
	return proto.EnumName(HttpRule_HttpMethod_name, int32(x))
}

func (x *HttpRule_HttpMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HttpRule_HttpMethod_value, data, "HttpRule_HttpMethod")
	if err != nil {
		return err
	}
	*x = HttpRule_HttpMethod(value)
	return nil
}

func (HttpRule_HttpMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0, 0}
}

type HttpRule_Permission int32

const (
	HttpRule_IgnoreLogin           HttpRule_Permission = 0
	HttpRule_LoginWithNoPermission HttpRule_Permission = 1
	HttpRule_NeedPerm              HttpRule_Permission = 2
)

var HttpRule_Permission_name = map[int32]string{
	0: "IgnoreLogin",
	1: "LoginWithNoPermission",
	2: "NeedPerm",
}

var HttpRule_Permission_value = map[string]int32{
	"IgnoreLogin":           0,
	"LoginWithNoPermission": 1,
	"NeedPerm":              2,
}

func (x HttpRule_Permission) Enum() *HttpRule_Permission {
	p := new(HttpRule_Permission)
	*p = x
	return p
}

func (x HttpRule_Permission) String() string {
	return proto.EnumName(HttpRule_Permission_name, int32(x))
}

func (x *HttpRule_Permission) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HttpRule_Permission_value, data, "HttpRule_Permission")
	if err != nil {
		return err
	}
	*x = HttpRule_Permission(value)
	return nil
}

func (HttpRule_Permission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0, 1}
}

type HttpRule struct {
	Method *HttpRule_HttpMethod `protobuf:"varint,1,req,name=method,enum=bidewu.HttpRule_HttpMethod,def=0" json:"method,omitempty"`
	//权限
	Perm                 *HttpRule_Permission `protobuf:"varint,2,req,name=perm,enum=bidewu.HttpRule_Permission,def=2" json:"perm,omitempty"`
	Permcode             *string              `protobuf:"bytes,3,opt,name=permcode" json:"permcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HttpRule) Reset()         { *m = HttpRule{} }
func (m *HttpRule) String() string { return proto.CompactTextString(m) }
func (*HttpRule) ProtoMessage()    {}
func (*HttpRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}
func (m *HttpRule) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HttpRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HttpRule.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HttpRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRule.Merge(m, src)
}
func (m *HttpRule) XXX_Size() int {
	return m.Size()
}
func (m *HttpRule) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRule.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRule proto.InternalMessageInfo

const Default_HttpRule_Method HttpRule_HttpMethod = HttpRule_No
const Default_HttpRule_Perm HttpRule_Permission = HttpRule_NeedPerm

func (m *HttpRule) GetMethod() HttpRule_HttpMethod {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return Default_HttpRule_Method
}

func (m *HttpRule) GetPerm() HttpRule_Permission {
	if m != nil && m.Perm != nil {
		return *m.Perm
	}
	return Default_HttpRule_Perm
}

func (m *HttpRule) GetPermcode() string {
	if m != nil && m.Permcode != nil {
		return *m.Permcode
	}
	return ""
}

var E_Http = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.MethodOptions)(nil),
	ExtensionType: (*HttpRule)(nil),
	Field:         72295628,
	Name:          "bidewu.http",
	Tag:           "bytes,72295628,opt,name=http",
	Filename:      "permission.proto",
}

func init() {
	proto.RegisterEnum("bidewu.HttpRule_HttpMethod", HttpRule_HttpMethod_name, HttpRule_HttpMethod_value)
	proto.RegisterEnum("bidewu.HttpRule_Permission", HttpRule_Permission_name, HttpRule_Permission_value)
	proto.RegisterType((*HttpRule)(nil), "bidewu.HttpRule")
	proto.RegisterExtension(E_Http)
}

func init() { proto.RegisterFile("permission.proto", fileDescriptor_c837ef01cbda0ad8) }

var fileDescriptor_c837ef01cbda0ad8 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4a, 0xfb, 0x40,
	0x14, 0xc6, 0x3b, 0xd3, 0xd2, 0x7f, 0xfe, 0xaf, 0x62, 0x87, 0x81, 0x42, 0xac, 0x10, 0x42, 0x36,
	0x76, 0x95, 0x42, 0x37, 0x62, 0x5d, 0x19, 0xd4, 0xb6, 0xa0, 0xb1, 0x04, 0x4b, 0xd1, 0x9d, 0x6d,
	0xc6, 0x24, 0xd0, 0xe6, 0x85, 0x64, 0x82, 0x87, 0xf0, 0x02, 0xae, 0x3d, 0x87, 0x07, 0x50, 0x70,
	0xe1, 0x11, 0xa4, 0x5e, 0x44, 0x3a, 0xb1, 0x0d, 0x08, 0xae, 0xe6, 0xfb, 0x86, 0xdf, 0x7b, 0xef,
	0x9b, 0x37, 0xc0, 0x12, 0x91, 0x2e, 0xa3, 0x2c, 0x8b, 0x30, 0xb6, 0x93, 0x14, 0x25, 0xf2, 0xfa,
	0x2c, 0xf2, 0xc5, 0x43, 0xde, 0x36, 0x03, 0xc4, 0x60, 0x21, 0xba, 0xea, 0x76, 0x96, 0xdf, 0x77,
	0x7d, 0x91, 0xcd, 0xd3, 0x28, 0x91, 0x98, 0x16, 0xa4, 0xf5, 0x48, 0x41, 0x1b, 0x4a, 0x99, 0x78,
	0xf9, 0x42, 0xf0, 0x43, 0xa8, 0x2f, 0x85, 0x0c, 0xd1, 0xd7, 0x89, 0x49, 0x3b, 0xbb, 0xbd, 0x7d,
	0xbb, 0xe8, 0x63, 0x6f, 0x08, 0x25, 0x2e, 0x15, 0xd2, 0xa7, 0x2e, 0x7a, 0x3f, 0x38, 0x3f, 0x82,
	0xda, 0x3a, 0x83, 0x4e, 0xff, 0x28, 0x1b, 0x6f, 0x03, 0xf6, 0x35, 0x57, 0x08, 0x7f, 0xed, 0x3d,
	0x55, 0xc2, 0xdb, 0xa0, 0xad, 0xcf, 0x39, 0xfa, 0x42, 0xaf, 0x9a, 0xa4, 0xf3, 0xdf, 0xdb, 0x7a,
	0xeb, 0x00, 0xa0, 0x1c, 0xc8, 0xeb, 0x40, 0x5d, 0x64, 0x15, 0xfe, 0x0f, 0xaa, 0x03, 0x21, 0x19,
	0xe1, 0x1a, 0xd4, 0xc6, 0x98, 0x49, 0x46, 0xad, 0x73, 0x80, 0x72, 0x04, 0x6f, 0x42, 0x63, 0x14,
	0xc4, 0x98, 0x8a, 0x0b, 0x0c, 0xa2, 0x98, 0x55, 0xf8, 0x1e, 0xb4, 0x94, 0x9c, 0x46, 0x32, 0x74,
	0xb1, 0x24, 0x19, 0xe1, 0x3b, 0xb0, 0x0d, 0xc4, 0x68, 0x7f, 0x00, 0xb5, 0x50, 0xca, 0x84, 0x1b,
	0x76, 0xb1, 0x38, 0x7b, 0xb3, 0x38, 0xbb, 0xc8, 0x70, 0x95, 0xc8, 0x08, 0xe3, 0x4c, 0x7f, 0x7f,
	0x7b, 0xb1, 0x4c, 0xd2, 0x69, 0xf4, 0xd8, 0xef, 0xa7, 0x7a, 0xaa, 0x81, 0x73, 0xf3, 0xba, 0x32,
	0xc8, 0xc7, 0xca, 0x20, 0x9f, 0x2b, 0x83, 0x3c, 0x7d, 0x19, 0x15, 0x68, 0xce, 0x71, 0xb9, 0x81,
	0xef, 0x72, 0x19, 0x3a, 0xcc, 0x51, 0xa6, 0x4c, 0x33, 0x26, 0xb7, 0xad, 0xf2, 0x27, 0x8f, 0x4b,
	0xf9, 0x4c, 0xc1, 0x19, 0x9d, 0x9e, 0x4d, 0x27, 0x27, 0x93, 0xeb, 0xe1, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x62, 0x1d, 0x67, 0x7d, 0xee, 0x01, 0x00, 0x00,
}

func (m *HttpRule) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HttpRule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HttpRule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Permcode != nil {
		i -= len(*m.Permcode)
		copy(dAtA[i:], *m.Permcode)
		i = encodeVarintPermission(dAtA, i, uint64(len(*m.Permcode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Perm == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintPermission(dAtA, i, uint64(*m.Perm))
		i--
		dAtA[i] = 0x10
	}
	if m.Method == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintPermission(dAtA, i, uint64(*m.Method))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPermission(dAtA []byte, offset int, v uint64) int {
	offset -= sovPermission(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *HttpRule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Method != nil {
		n += 1 + sovPermission(uint64(*m.Method))
	}
	if m.Perm != nil {
		n += 1 + sovPermission(uint64(*m.Perm))
	}
	if m.Permcode != nil {
		l = len(*m.Permcode)
		n += 1 + l + sovPermission(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPermission(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPermission(x uint64) (n int) {
	return sovPermission(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HttpRule) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPermission
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HttpRule: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HttpRule: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var v HttpRule_HttpMethod
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= HttpRule_HttpMethod(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Method = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Perm", wireType)
			}
			var v HttpRule_Permission
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= HttpRule_Permission(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Perm = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPermission
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPermission
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPermission
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Permcode = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPermission(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPermission
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPermission(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPermission
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPermission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPermission
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPermission
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPermission
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPermission
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPermission        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPermission          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPermission = fmt.Errorf("proto: unexpected end of group")
)
